<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Red Hare Security Research</title>
    <link>/</link>
    <description>Recent content on Red Hare Security Research</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Jan 2021 00:53:11 -0500</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Discovering Anomalies</title>
      <link>/dfir/dfir001-discovering-anomalies/</link>
      <pubDate>Tue, 26 Jan 2021 20:15:36 -0500</pubDate>
      
      <guid>/dfir/dfir001-discovering-anomalies/</guid>
      <description>How do you confirm that an executable is malware? Sounds like an odd question to ask, but incident response exists in the world because something happened that evaded antivirus detection. Refer to the following chart (image from Lenny Zeltser): Antivirus or sandboxes would be considered a fully-automated analysis of a suspected executable. As an attacker, youâ€™d want to implement a payload that can evade anti-virus detection, so fully-automated analysis loses it&amp;rsquo;s effectiveness especially when adversaries can bypass these defenses.</description>
    </item>
    
  </channel>
</rss>
